@inject HttpClient Http
@using CFDA2.Shared.ViewModels

<h3>Payment Methods</h3>

<table class="table table-sm">
    <thead>
        <tr>
            <th>Brand</th>
            <th>Last 4</th>
            <th>Expires</th>
            <th>Default</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var pm in _methods)
        {
            <tr>
                <td>@pm.Brand</td>
                <td>@pm.Last4</td>
                <td>@pm.ExpMonth/@pm.ExpYear</td>
                <td>@(pm.IsDefault ? "Yes" : "No")</td>
                <td>
                    @if (!pm.IsDefault)
                    {
                        <button class="btn btn-link" @onclick="() => SetDefault(pm.Id)">Set Default</button>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<button class="btn btn-primary" @onclick="Add">Add Payment Method</button>

@if (!string.IsNullOrEmpty(_clientSecret))
{
    <div class="alert alert-info mt-3">
        Setup Intent Client Secret: @_clientSecret
    </div>
}

@code {
    private List<PaymentMethodView> _methods = new();
    private string? _clientSecret;
    protected override async Task OnInitializedAsync()
    {
        await Load();
    }
    private async Task Load()
    {
        _methods = (await Http.GetFromJsonAsync<List<PaymentMethodView>>("/api/portal/payment-methods")) ?? new List<PaymentMethodView>();
    }
    private async Task SetDefault(int id)
    {
        await Http.PostAsJsonAsync("/api/portal/autopay/default-method", new { PaymentMethodId = id });
        await Load();
    }
    private async Task Add()
    {
        var response = await Http.PostAsync("/api/portal/payment-methods/setup-intent", null);
        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<SetupIntentView>();
            _clientSecret = result?.ClientSecret;
        }
    }
}
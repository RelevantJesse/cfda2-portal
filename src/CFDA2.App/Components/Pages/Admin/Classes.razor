@inject HttpClient Http
@using CFDA2.Shared.ViewModels

<h3>Classes</h3>
<table class="table table-sm">
    <thead>
        <tr>
            <th>Name</th>
            <th>Level</th>
            <th>Style</th>
            <th>Day</th>
            <th>Time</th>
            <th>Tuition</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var c in _classes)
        {
            <tr>
                <td>@c.Name</td>
                <td>@c.Level</td>
                <td>@c.Style</td>
                <td>@c.DayOfWeek</td>
                <td>@c.StartTime.ToString("hh:mm") - @c.EndTime.ToString("hh:mm")</td>
                <td>@(c.MonthlyTuitionCents / 100.0m).ToString("C2")</td>
            </tr>
        }
    </tbody>
</table>

<h4>Add Class</h4>
<EditForm Model="_newClass" OnValidSubmit="Create">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-2">
        <InputText class="form-control" @bind-Value="_newClass.Name" placeholder="Name" />
    </div>
    <div class="mb-2">
        <InputText class="form-control" @bind-Value="_newClass.Level" placeholder="Level" />
    </div>
    <div class="mb-2">
        <InputText class="form-control" @bind-Value="_newClass.Style" placeholder="Style" />
    </div>
    <div class="mb-2">
        <InputNumber class="form-control" @bind-Value="_newClass.Capacity" placeholder="Capacity" />
    </div>
    <div class="mb-2">
        <label>Day Of Week</label>
        <InputSelect class="form-control" @bind-Value="_newClass.DayOfWeek">
            @foreach (var day in Enum.GetValues<DayOfWeek>())
            {
                <option value="@day">@day</option>
            }
        </InputSelect>
    </div>
    <div class="mb-2">
        <label>Start Time</label>
        <InputDate Type="InputDateType.Time" class="form-control" @bind-Value="_start" />
    </div>
    <div class="mb-2">
        <label>End Time</label>
        <InputDate Type="InputDateType.Time" class="form-control" @bind-Value="_end" />
    </div>
    <div class="mb-2">
        <InputNumber class="form-control" @bind-Value="_newClass.MonthlyTuitionCents" placeholder="Tuition (cents)" />
    </div>
    <div class="mb-2">
        <label>
            <input type="checkbox" @bind="_newClass.Active" /> Active
        </label>
    </div>
    <button class="btn btn-primary">Create</button>
</EditForm>

@code {
    private List<ClassView> _classes = new();
    private ClassCreateRequest _newClass = new() { Active = true };
    private TimeSpan _start;
    private TimeSpan _end;
    protected override async Task OnInitializedAsync()
    {
        await Load();
    }
    private async Task Load()
    {
        _classes = (await Http.GetFromJsonAsync<List<ClassView>>("/api/admin/classes")) ?? new List<ClassView>();
    }
    private async Task Create()
    {
        _newClass.StartTime = _start;
        _newClass.EndTime = _end;
        await Http.PostAsJsonAsync("/api/admin/classes", _newClass);
        _newClass = new ClassCreateRequest { Active = true };
        _start = TimeSpan.Zero;
        _end = TimeSpan.Zero;
        await Load();
    }
}